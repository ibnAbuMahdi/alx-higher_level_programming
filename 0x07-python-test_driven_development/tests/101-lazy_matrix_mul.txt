>>> mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> mul([],[])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> mul([1],[])
Traceback (most recent call last):
TypeError: m_a must be a list of lists or numpy array of arrays

>>> mul([[]], [[]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> mul([[1]],[[]])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> mul([[1]],[6])
Traceback (most recent call last):
TypeError: m_b must be a list of lists or numpy array of arrays

>>> mul([[1]],[])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> mul([[1], [2, 3]], [[2, 3], [4, 5]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> mul([[1, 2], [2, 3]], [[3], [4, 5]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> mul([[1, 2], ["2", 3]], [[3], [4, 5]])
Traceback (most recent call last):
ValueError: m_a should contain only integers, floats, numpy.int64 or numpy.float64

>>> mul([[1, 2], [2, 3]], [["3"], [4, 5]])
Traceback (most recent call last):
ValueError: m_b should contain only integers, floats, numpy.int64 or numpy.float64

>>> mul([[1]], [[2,3], [4,5]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> mul([[1,2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

>>> mul([[1.5,2], [3.2, 4]], [[1, 2], [3, 4]])
array([[ 7.5, 11. ],
       [15.2, 22.4]])

>>> mul(1, [[1]])
Traceback (most recent call last):
TypeError: m_a must be a list or numpy.ndarray

>>> mul([[1]], 3)
Traceback (most recent call last):
TypeError: m_b must be a list or numpy.ndarray

